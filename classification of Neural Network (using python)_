{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1Ry3FCSqKaELUKftaQuqyEFtDL5OlN-n8","authorship_tag":"ABX9TyP75efKF6uLpi0AiYxZXgyO"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","from sklearn.preprocessing import LabelEncoder, minmax_scale\n","from sklearn.model_selection import train_test_split\n","import warnings\n","warnings.filterwarnings('ignore')"],"metadata":{"id":"WpEIVBWFfbtW","executionInfo":{"status":"ok","timestamp":1676001795379,"user_tz":-330,"elapsed":1576,"user":{"displayName":"Shaista Daniya","userId":"12707569234039829089"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["df = pd.read_excel(\"/content/drive/MyDrive/Date_Fruit_Datasets/Date_Fruit_Datasets.xlsx\")"],"metadata":{"id":"NVSpF716fqph","executionInfo":{"status":"ok","timestamp":1676001913579,"user_tz":-330,"elapsed":1185,"user":{"displayName":"Shaista Daniya","userId":"12707569234039829089"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["print(\"*\"*30, \"HEAD\", \"*\"*30)\n","display(df.head(5))\n","print(\"*\"*30, \"SHAPE\", \"*\"*30)\n","print(f\"Rows: {df.shape[0]}\\nColumns: {df.shape[1]}\")\n","print(\"*\"*30, \"INFO\", \"*\"*30)\n","display(df.info())\n","print(\"*\"*30, \"NULL?\", \"*\"*30)\n","display(df.isnull().sum())\n","print(\"*\"*30, \"DUPLICATED\", \"*\"*30)\n","display(df.duplicated().sum())\n","print(\"*\"*30, \"EXPLAINING\", \"*\"*30)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"hH8kOtSrf7LS","executionInfo":{"status":"ok","timestamp":1676001929589,"user_tz":-330,"elapsed":590,"user":{"displayName":"Shaista Daniya","userId":"12707569234039829089"}},"outputId":"a815871e-40b3-4ac7-8f41-39fa2c680084"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["****************************** HEAD ******************************\n"]},{"output_type":"display_data","data":{"text/plain":["     AREA  PERIMETER  MAJOR_AXIS  MINOR_AXIS  ECCENTRICITY   EQDIASQ  \\\n","0  422163   2378.908    837.8484    645.6693        0.6373  733.1539   \n","1  338136   2085.144    723.8198    595.2073        0.5690  656.1464   \n","2  526843   2647.394    940.7379    715.3638        0.6494  819.0222   \n","3  416063   2351.210    827.9804    645.2988        0.6266  727.8378   \n","4  347562   2160.354    763.9877    582.8359        0.6465  665.2291   \n","\n","   SOLIDITY  CONVEX_AREA  EXTENT  ASPECT_RATIO  ...  KurtosisRR  KurtosisRG  \\\n","0    0.9947       424428  0.7831        1.2976  ...      3.2370      2.9574   \n","1    0.9974       339014  0.7795        1.2161  ...      2.6228      2.6350   \n","2    0.9962       528876  0.7657        1.3150  ...      3.7516      3.8611   \n","3    0.9948       418255  0.7759        1.2831  ...      5.0401      8.6136   \n","4    0.9908       350797  0.7569        1.3108  ...      2.7016      2.9761   \n","\n","   KurtosisRB    EntropyRR    EntropyRG    EntropyRB  ALLdaub4RR  ALLdaub4RG  \\\n","0      4.2287 -59191263232 -50714214400 -39922372608     58.7255     54.9554   \n","1      3.1704 -34233065472 -37462601728 -31477794816     50.0259     52.8168   \n","2      4.7192 -93948354560 -74738221056 -60311207936     65.4772     59.2860   \n","3      8.2618 -32074307584 -32060925952 -29575010304     43.3900     44.1259   \n","4      4.4146 -39980974080 -35980042240 -25593278464     52.7743     50.9080   \n","\n","   ALLdaub4RB  Class  \n","0     47.8400  BERHI  \n","1     47.8315  BERHI  \n","2     51.9378  BERHI  \n","3     41.1882  BERHI  \n","4     42.6666  BERHI  \n","\n","[5 rows x 35 columns]"],"text/html":["\n","  <div id=\"df-6bafc1b8-8b25-4f4a-9a7f-3f23bb360fdb\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AREA</th>\n","      <th>PERIMETER</th>\n","      <th>MAJOR_AXIS</th>\n","      <th>MINOR_AXIS</th>\n","      <th>ECCENTRICITY</th>\n","      <th>EQDIASQ</th>\n","      <th>SOLIDITY</th>\n","      <th>CONVEX_AREA</th>\n","      <th>EXTENT</th>\n","      <th>ASPECT_RATIO</th>\n","      <th>...</th>\n","      <th>KurtosisRR</th>\n","      <th>KurtosisRG</th>\n","      <th>KurtosisRB</th>\n","      <th>EntropyRR</th>\n","      <th>EntropyRG</th>\n","      <th>EntropyRB</th>\n","      <th>ALLdaub4RR</th>\n","      <th>ALLdaub4RG</th>\n","      <th>ALLdaub4RB</th>\n","      <th>Class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>422163</td>\n","      <td>2378.908</td>\n","      <td>837.8484</td>\n","      <td>645.6693</td>\n","      <td>0.6373</td>\n","      <td>733.1539</td>\n","      <td>0.9947</td>\n","      <td>424428</td>\n","      <td>0.7831</td>\n","      <td>1.2976</td>\n","      <td>...</td>\n","      <td>3.2370</td>\n","      <td>2.9574</td>\n","      <td>4.2287</td>\n","      <td>-59191263232</td>\n","      <td>-50714214400</td>\n","      <td>-39922372608</td>\n","      <td>58.7255</td>\n","      <td>54.9554</td>\n","      <td>47.8400</td>\n","      <td>BERHI</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>338136</td>\n","      <td>2085.144</td>\n","      <td>723.8198</td>\n","      <td>595.2073</td>\n","      <td>0.5690</td>\n","      <td>656.1464</td>\n","      <td>0.9974</td>\n","      <td>339014</td>\n","      <td>0.7795</td>\n","      <td>1.2161</td>\n","      <td>...</td>\n","      <td>2.6228</td>\n","      <td>2.6350</td>\n","      <td>3.1704</td>\n","      <td>-34233065472</td>\n","      <td>-37462601728</td>\n","      <td>-31477794816</td>\n","      <td>50.0259</td>\n","      <td>52.8168</td>\n","      <td>47.8315</td>\n","      <td>BERHI</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>526843</td>\n","      <td>2647.394</td>\n","      <td>940.7379</td>\n","      <td>715.3638</td>\n","      <td>0.6494</td>\n","      <td>819.0222</td>\n","      <td>0.9962</td>\n","      <td>528876</td>\n","      <td>0.7657</td>\n","      <td>1.3150</td>\n","      <td>...</td>\n","      <td>3.7516</td>\n","      <td>3.8611</td>\n","      <td>4.7192</td>\n","      <td>-93948354560</td>\n","      <td>-74738221056</td>\n","      <td>-60311207936</td>\n","      <td>65.4772</td>\n","      <td>59.2860</td>\n","      <td>51.9378</td>\n","      <td>BERHI</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>416063</td>\n","      <td>2351.210</td>\n","      <td>827.9804</td>\n","      <td>645.2988</td>\n","      <td>0.6266</td>\n","      <td>727.8378</td>\n","      <td>0.9948</td>\n","      <td>418255</td>\n","      <td>0.7759</td>\n","      <td>1.2831</td>\n","      <td>...</td>\n","      <td>5.0401</td>\n","      <td>8.6136</td>\n","      <td>8.2618</td>\n","      <td>-32074307584</td>\n","      <td>-32060925952</td>\n","      <td>-29575010304</td>\n","      <td>43.3900</td>\n","      <td>44.1259</td>\n","      <td>41.1882</td>\n","      <td>BERHI</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>347562</td>\n","      <td>2160.354</td>\n","      <td>763.9877</td>\n","      <td>582.8359</td>\n","      <td>0.6465</td>\n","      <td>665.2291</td>\n","      <td>0.9908</td>\n","      <td>350797</td>\n","      <td>0.7569</td>\n","      <td>1.3108</td>\n","      <td>...</td>\n","      <td>2.7016</td>\n","      <td>2.9761</td>\n","      <td>4.4146</td>\n","      <td>-39980974080</td>\n","      <td>-35980042240</td>\n","      <td>-25593278464</td>\n","      <td>52.7743</td>\n","      <td>50.9080</td>\n","      <td>42.6666</td>\n","      <td>BERHI</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 35 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6bafc1b8-8b25-4f4a-9a7f-3f23bb360fdb')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6bafc1b8-8b25-4f4a-9a7f-3f23bb360fdb button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6bafc1b8-8b25-4f4a-9a7f-3f23bb360fdb');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["****************************** SHAPE ******************************\n","Rows: 898\n","Columns: 35\n","****************************** INFO ******************************\n","<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 898 entries, 0 to 897\n","Data columns (total 35 columns):\n"," #   Column         Non-Null Count  Dtype  \n","---  ------         --------------  -----  \n"," 0   AREA           898 non-null    int64  \n"," 1   PERIMETER      898 non-null    float64\n"," 2   MAJOR_AXIS     898 non-null    float64\n"," 3   MINOR_AXIS     898 non-null    float64\n"," 4   ECCENTRICITY   898 non-null    float64\n"," 5   EQDIASQ        898 non-null    float64\n"," 6   SOLIDITY       898 non-null    float64\n"," 7   CONVEX_AREA    898 non-null    int64  \n"," 8   EXTENT         898 non-null    float64\n"," 9   ASPECT_RATIO   898 non-null    float64\n"," 10  ROUNDNESS      898 non-null    float64\n"," 11  COMPACTNESS    898 non-null    float64\n"," 12  SHAPEFACTOR_1  898 non-null    float64\n"," 13  SHAPEFACTOR_2  898 non-null    float64\n"," 14  SHAPEFACTOR_3  898 non-null    float64\n"," 15  SHAPEFACTOR_4  898 non-null    float64\n"," 16  MeanRR         898 non-null    float64\n"," 17  MeanRG         898 non-null    float64\n"," 18  MeanRB         898 non-null    float64\n"," 19  StdDevRR       898 non-null    float64\n"," 20  StdDevRG       898 non-null    float64\n"," 21  StdDevRB       898 non-null    float64\n"," 22  SkewRR         898 non-null    float64\n"," 23  SkewRG         898 non-null    float64\n"," 24  SkewRB         898 non-null    float64\n"," 25  KurtosisRR     898 non-null    float64\n"," 26  KurtosisRG     898 non-null    float64\n"," 27  KurtosisRB     898 non-null    float64\n"," 28  EntropyRR      898 non-null    int64  \n"," 29  EntropyRG      898 non-null    int64  \n"," 30  EntropyRB      898 non-null    int64  \n"," 31  ALLdaub4RR     898 non-null    float64\n"," 32  ALLdaub4RG     898 non-null    float64\n"," 33  ALLdaub4RB     898 non-null    float64\n"," 34  Class          898 non-null    object \n","dtypes: float64(29), int64(5), object(1)\n","memory usage: 245.7+ KB\n"]},{"output_type":"display_data","data":{"text/plain":["None"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["****************************** NULL? ******************************\n"]},{"output_type":"display_data","data":{"text/plain":["AREA             0\n","PERIMETER        0\n","MAJOR_AXIS       0\n","MINOR_AXIS       0\n","ECCENTRICITY     0\n","EQDIASQ          0\n","SOLIDITY         0\n","CONVEX_AREA      0\n","EXTENT           0\n","ASPECT_RATIO     0\n","ROUNDNESS        0\n","COMPACTNESS      0\n","SHAPEFACTOR_1    0\n","SHAPEFACTOR_2    0\n","SHAPEFACTOR_3    0\n","SHAPEFACTOR_4    0\n","MeanRR           0\n","MeanRG           0\n","MeanRB           0\n","StdDevRR         0\n","StdDevRG         0\n","StdDevRB         0\n","SkewRR           0\n","SkewRG           0\n","SkewRB           0\n","KurtosisRR       0\n","KurtosisRG       0\n","KurtosisRB       0\n","EntropyRR        0\n","EntropyRG        0\n","EntropyRB        0\n","ALLdaub4RR       0\n","ALLdaub4RG       0\n","ALLdaub4RB       0\n","Class            0\n","dtype: int64"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["****************************** DUPLICATED ******************************\n"]},{"output_type":"display_data","data":{"text/plain":["0"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["****************************** EXPLAINING ******************************\n"]}]},{"cell_type":"code","source":["X = df.drop(\"Class\", axis=1)\n","y = df.loc[:,\"Class\"]"],"metadata":{"id":"uqib2IWrf7O2","executionInfo":{"status":"ok","timestamp":1676001970488,"user_tz":-330,"elapsed":410,"user":{"displayName":"Shaista Daniya","userId":"12707569234039829089"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["X_scaled = minmax_scale(X)\n","X = pd.DataFrame(X_scaled)"],"metadata":{"id":"ZX36bVrDgJxF","executionInfo":{"status":"ok","timestamp":1676001995106,"user_tz":-330,"elapsed":372,"user":{"displayName":"Shaista Daniya","userId":"12707569234039829089"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["X.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":299},"id":"-t-ZhEhVgPC0","executionInfo":{"status":"ok","timestamp":1676002008406,"user_tz":-330,"elapsed":667,"user":{"displayName":"Shaista Daniya","userId":"12707569234039829089"}},"outputId":"9bbaba4c-bb93-45a0-f284-61a8867c19ed"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         0         1         2         3         4         5         6   \\\n","0  0.772274  0.772079  0.565604  0.841941  0.446429  0.871512  0.983209   \n","1  0.617835  0.617480  0.436904  0.775906  0.342186  0.773229  1.000000   \n","2  0.964674  0.913374  0.681733  0.933143  0.464896  0.981104  0.992537   \n","3  0.761063  0.757502  0.554467  0.841456  0.430098  0.864727  0.983831   \n","4  0.635159  0.657060  0.482240  0.759716  0.460470  0.784821  0.958955   \n","\n","         7         8         9   ...        24        25        26        27  \\\n","0  0.767108  0.787438  0.000435  ...  0.395739  0.062495  0.053715  0.080752   \n","1  0.611906  0.776970  0.000282  ...  0.350002  0.037387  0.040885  0.046033   \n","2  0.956896  0.736842  0.000467  ...  0.472509  0.083531  0.089677  0.096843   \n","3  0.755891  0.766502  0.000408  ...  0.687121  0.136202  0.278800  0.213061   \n","4  0.633316  0.711253  0.000459  ...  0.464794  0.040608  0.054459  0.086850   \n","\n","         28        29        30        31        32        33  \n","0  0.458253  0.455197  0.546327  0.673513  0.550537  0.494665  \n","1  0.687312  0.599151  0.643352  0.538923  0.516341  0.494501  \n","2  0.139263  0.194220  0.312066  0.777967  0.619782  0.573507  \n","3  0.707125  0.657830  0.665214  0.436260  0.377376  0.366683  \n","4  0.634560  0.615256  0.710963  0.581443  0.485820  0.395128  \n","\n","[5 rows x 34 columns]"],"text/html":["\n","  <div id=\"df-d30e69e4-ccc7-45b4-acef-4e12edf95050\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>...</th>\n","      <th>24</th>\n","      <th>25</th>\n","      <th>26</th>\n","      <th>27</th>\n","      <th>28</th>\n","      <th>29</th>\n","      <th>30</th>\n","      <th>31</th>\n","      <th>32</th>\n","      <th>33</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.772274</td>\n","      <td>0.772079</td>\n","      <td>0.565604</td>\n","      <td>0.841941</td>\n","      <td>0.446429</td>\n","      <td>0.871512</td>\n","      <td>0.983209</td>\n","      <td>0.767108</td>\n","      <td>0.787438</td>\n","      <td>0.000435</td>\n","      <td>...</td>\n","      <td>0.395739</td>\n","      <td>0.062495</td>\n","      <td>0.053715</td>\n","      <td>0.080752</td>\n","      <td>0.458253</td>\n","      <td>0.455197</td>\n","      <td>0.546327</td>\n","      <td>0.673513</td>\n","      <td>0.550537</td>\n","      <td>0.494665</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.617835</td>\n","      <td>0.617480</td>\n","      <td>0.436904</td>\n","      <td>0.775906</td>\n","      <td>0.342186</td>\n","      <td>0.773229</td>\n","      <td>1.000000</td>\n","      <td>0.611906</td>\n","      <td>0.776970</td>\n","      <td>0.000282</td>\n","      <td>...</td>\n","      <td>0.350002</td>\n","      <td>0.037387</td>\n","      <td>0.040885</td>\n","      <td>0.046033</td>\n","      <td>0.687312</td>\n","      <td>0.599151</td>\n","      <td>0.643352</td>\n","      <td>0.538923</td>\n","      <td>0.516341</td>\n","      <td>0.494501</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.964674</td>\n","      <td>0.913374</td>\n","      <td>0.681733</td>\n","      <td>0.933143</td>\n","      <td>0.464896</td>\n","      <td>0.981104</td>\n","      <td>0.992537</td>\n","      <td>0.956896</td>\n","      <td>0.736842</td>\n","      <td>0.000467</td>\n","      <td>...</td>\n","      <td>0.472509</td>\n","      <td>0.083531</td>\n","      <td>0.089677</td>\n","      <td>0.096843</td>\n","      <td>0.139263</td>\n","      <td>0.194220</td>\n","      <td>0.312066</td>\n","      <td>0.777967</td>\n","      <td>0.619782</td>\n","      <td>0.573507</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.761063</td>\n","      <td>0.757502</td>\n","      <td>0.554467</td>\n","      <td>0.841456</td>\n","      <td>0.430098</td>\n","      <td>0.864727</td>\n","      <td>0.983831</td>\n","      <td>0.755891</td>\n","      <td>0.766502</td>\n","      <td>0.000408</td>\n","      <td>...</td>\n","      <td>0.687121</td>\n","      <td>0.136202</td>\n","      <td>0.278800</td>\n","      <td>0.213061</td>\n","      <td>0.707125</td>\n","      <td>0.657830</td>\n","      <td>0.665214</td>\n","      <td>0.436260</td>\n","      <td>0.377376</td>\n","      <td>0.366683</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.635159</td>\n","      <td>0.657060</td>\n","      <td>0.482240</td>\n","      <td>0.759716</td>\n","      <td>0.460470</td>\n","      <td>0.784821</td>\n","      <td>0.958955</td>\n","      <td>0.633316</td>\n","      <td>0.711253</td>\n","      <td>0.000459</td>\n","      <td>...</td>\n","      <td>0.464794</td>\n","      <td>0.040608</td>\n","      <td>0.054459</td>\n","      <td>0.086850</td>\n","      <td>0.634560</td>\n","      <td>0.615256</td>\n","      <td>0.710963</td>\n","      <td>0.581443</td>\n","      <td>0.485820</td>\n","      <td>0.395128</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 34 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d30e69e4-ccc7-45b4-acef-4e12edf95050')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d30e69e4-ccc7-45b4-acef-4e12edf95050 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d30e69e4-ccc7-45b4-acef-4e12edf95050');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["lbe = LabelEncoder()\n","y = lbe.fit_transform(y)"],"metadata":{"id":"Ieae-gKmgTKg","executionInfo":{"status":"ok","timestamp":1676002031484,"user_tz":-330,"elapsed":408,"user":{"displayName":"Shaista Daniya","userId":"12707569234039829089"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-7jnN3pDgYGu","executionInfo":{"status":"ok","timestamp":1676002040741,"user_tz":-330,"elapsed":371,"user":{"displayName":"Shaista Daniya","userId":"12707569234039829089"}},"outputId":"dcf96393-a174-43cb-ebb6-d066312811a8"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n","       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","       1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n","       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n","       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n","       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n","       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n","       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n","       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n","       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n","       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n","       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3,\n","       3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n","       3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n","       3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4,\n","       4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n","       4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n","       4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n","       4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n","       4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n","       4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n","       4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n","       4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n","       5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n","       5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n","       5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n","       5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n","       5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n","       5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n","       5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n","       5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n","       5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n","       6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n","       6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n","       6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n","       6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6])"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["X_train, X_temp, y_train, y_temp = train_test_split(X,y, train_size = 0.8)\n","X_val,X_test, y_val, y_test =  train_test_split(X_temp,y_temp, train_size = 0.5)"],"metadata":{"id":"qjCKsAzagc3U","executionInfo":{"status":"ok","timestamp":1676002059019,"user_tz":-330,"elapsed":402,"user":{"displayName":"Shaista Daniya","userId":"12707569234039829089"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["import tensorflow as tf"],"metadata":{"id":"morq2vs2ge6x","executionInfo":{"status":"ok","timestamp":1676002075018,"user_tz":-330,"elapsed":2263,"user":{"displayName":"Shaista Daniya","userId":"12707569234039829089"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["model = tf.keras.Sequential()"],"metadata":{"id":"-TdS_Qljgirm","executionInfo":{"status":"ok","timestamp":1676002088519,"user_tz":-330,"elapsed":450,"user":{"displayName":"Shaista Daniya","userId":"12707569234039829089"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["input_layer = tf.keras.layers.Dense(4096, input_shape=(34,), activation =\"relu\")\n","model.add(input_layer)"],"metadata":{"id":"5MC0OytKglmU","executionInfo":{"status":"ok","timestamp":1676002101198,"user_tz":-330,"elapsed":604,"user":{"displayName":"Shaista Daniya","userId":"12707569234039829089"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["for i in range(3):\n","    model.add(tf.keras.layers.Dense(4096, activation = \"relu\"))\n","    model.add(tf.keras.layers.Dropout(0.5))"],"metadata":{"id":"Pqd-H79fgoyJ","executionInfo":{"status":"ok","timestamp":1676002115416,"user_tz":-330,"elapsed":962,"user":{"displayName":"Shaista Daniya","userId":"12707569234039829089"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["model.add(tf.keras.layers.Dense(7, activation = \"softmax\"))\n"],"metadata":{"id":"3ed5if55gtCd","executionInfo":{"status":"ok","timestamp":1676002133385,"user_tz":-330,"elapsed":382,"user":{"displayName":"Shaista Daniya","userId":"12707569234039829089"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["model.compile(optimizer = \"adam\", loss=\"sparse_categorical_crossentropy\", metrics = [\"accuracy\"])"],"metadata":{"id":"Mms822DbgxIq","executionInfo":{"status":"ok","timestamp":1676002147993,"user_tz":-330,"elapsed":366,"user":{"displayName":"Shaista Daniya","userId":"12707569234039829089"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["results = model.fit(X_train,y_train, epochs = 100, validation_data = (X_val,y_val))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EPhgmPRCg0fH","executionInfo":{"status":"ok","timestamp":1676003174203,"user_tz":-330,"elapsed":242121,"user":{"displayName":"Shaista Daniya","userId":"12707569234039829089"}},"outputId":"c907bf38-ee46-4ee0-f32d-ec77b995d468"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","23/23 [==============================] - 12s 501ms/step - loss: 1.6150 - accuracy: 0.4373 - val_loss: 0.9147 - val_accuracy: 0.6222\n","Epoch 2/100\n","23/23 [==============================] - 11s 451ms/step - loss: 0.7613 - accuracy: 0.7047 - val_loss: 0.7200 - val_accuracy: 0.6889\n","Epoch 3/100\n","23/23 [==============================] - 10s 449ms/step - loss: 0.6284 - accuracy: 0.7674 - val_loss: 0.7862 - val_accuracy: 0.6222\n","Epoch 4/100\n","23/23 [==============================] - 10s 451ms/step - loss: 0.5535 - accuracy: 0.7786 - val_loss: 1.0374 - val_accuracy: 0.5222\n","Epoch 5/100\n","23/23 [==============================] - 10s 444ms/step - loss: 0.5612 - accuracy: 0.7841 - val_loss: 0.6731 - val_accuracy: 0.7111\n","Epoch 6/100\n","23/23 [==============================] - 15s 648ms/step - loss: 0.5047 - accuracy: 0.8036 - val_loss: 0.5310 - val_accuracy: 0.8000\n","Epoch 7/100\n","23/23 [==============================] - 10s 438ms/step - loss: 0.4066 - accuracy: 0.8343 - val_loss: 0.6292 - val_accuracy: 0.7778\n","Epoch 8/100\n","23/23 [==============================] - 10s 453ms/step - loss: 0.4599 - accuracy: 0.8315 - val_loss: 0.5632 - val_accuracy: 0.7889\n","Epoch 9/100\n","23/23 [==============================] - 11s 467ms/step - loss: 0.3975 - accuracy: 0.8370 - val_loss: 0.5746 - val_accuracy: 0.7667\n","Epoch 10/100\n","23/23 [==============================] - 11s 448ms/step - loss: 0.3670 - accuracy: 0.8677 - val_loss: 0.8397 - val_accuracy: 0.6889\n","Epoch 11/100\n","23/23 [==============================] - 11s 491ms/step - loss: 0.4139 - accuracy: 0.8510 - val_loss: 0.4812 - val_accuracy: 0.8333\n","Epoch 12/100\n","23/23 [==============================] - 10s 452ms/step - loss: 0.3562 - accuracy: 0.8691 - val_loss: 0.7534 - val_accuracy: 0.7556\n","Epoch 13/100\n","23/23 [==============================] - 9s 401ms/step - loss: 0.4064 - accuracy: 0.8315 - val_loss: 0.7982 - val_accuracy: 0.7556\n","Epoch 14/100\n","23/23 [==============================] - 11s 491ms/step - loss: 0.3665 - accuracy: 0.8649 - val_loss: 0.5693 - val_accuracy: 0.8000\n","Epoch 15/100\n","23/23 [==============================] - 10s 449ms/step - loss: 0.4422 - accuracy: 0.8398 - val_loss: 0.6669 - val_accuracy: 0.7556\n","Epoch 16/100\n","23/23 [==============================] - 10s 449ms/step - loss: 0.2883 - accuracy: 0.8942 - val_loss: 0.6624 - val_accuracy: 0.8000\n","Epoch 17/100\n","23/23 [==============================] - 9s 401ms/step - loss: 0.3345 - accuracy: 0.8705 - val_loss: 0.5187 - val_accuracy: 0.8000\n","Epoch 18/100\n","23/23 [==============================] - 10s 428ms/step - loss: 0.3781 - accuracy: 0.8677 - val_loss: 0.6746 - val_accuracy: 0.7778\n","Epoch 19/100\n","23/23 [==============================] - 12s 532ms/step - loss: 0.3384 - accuracy: 0.8844 - val_loss: 0.5863 - val_accuracy: 0.8111\n","Epoch 20/100\n","23/23 [==============================] - 10s 429ms/step - loss: 0.3072 - accuracy: 0.8816 - val_loss: 0.6462 - val_accuracy: 0.7778\n","Epoch 21/100\n","23/23 [==============================] - 9s 397ms/step - loss: 0.2802 - accuracy: 0.8942 - val_loss: 0.4466 - val_accuracy: 0.8333\n","Epoch 22/100\n","23/23 [==============================] - 10s 450ms/step - loss: 0.3217 - accuracy: 0.8942 - val_loss: 0.5692 - val_accuracy: 0.8000\n","Epoch 23/100\n","23/23 [==============================] - 10s 450ms/step - loss: 0.3074 - accuracy: 0.8955 - val_loss: 0.5384 - val_accuracy: 0.8222\n","Epoch 24/100\n","23/23 [==============================] - 11s 491ms/step - loss: 0.3090 - accuracy: 0.8914 - val_loss: 0.5355 - val_accuracy: 0.8333\n","Epoch 25/100\n","23/23 [==============================] - 9s 396ms/step - loss: 0.3083 - accuracy: 0.8914 - val_loss: 0.4632 - val_accuracy: 0.8556\n","Epoch 26/100\n","23/23 [==============================] - 10s 451ms/step - loss: 0.2640 - accuracy: 0.9039 - val_loss: 0.5256 - val_accuracy: 0.8222\n","Epoch 27/100\n","23/23 [==============================] - 10s 448ms/step - loss: 0.3081 - accuracy: 0.8760 - val_loss: 0.6687 - val_accuracy: 0.8000\n","Epoch 28/100\n","23/23 [==============================] - 9s 394ms/step - loss: 0.2326 - accuracy: 0.9025 - val_loss: 0.6135 - val_accuracy: 0.8000\n","Epoch 29/100\n","23/23 [==============================] - 12s 522ms/step - loss: 0.2809 - accuracy: 0.8914 - val_loss: 0.4500 - val_accuracy: 0.8333\n","Epoch 30/100\n","23/23 [==============================] - 12s 514ms/step - loss: 0.2686 - accuracy: 0.8942 - val_loss: 0.4382 - val_accuracy: 0.8667\n","Epoch 31/100\n","23/23 [==============================] - 10s 426ms/step - loss: 0.2338 - accuracy: 0.8997 - val_loss: 0.3977 - val_accuracy: 0.8444\n","Epoch 32/100\n","23/23 [==============================] - 10s 404ms/step - loss: 0.2496 - accuracy: 0.9123 - val_loss: 0.6236 - val_accuracy: 0.7889\n","Epoch 33/100\n","23/23 [==============================] - 12s 514ms/step - loss: 0.3247 - accuracy: 0.8830 - val_loss: 0.4880 - val_accuracy: 0.8444\n","Epoch 34/100\n","23/23 [==============================] - 10s 453ms/step - loss: 0.2729 - accuracy: 0.9025 - val_loss: 0.6798 - val_accuracy: 0.8111\n","Epoch 35/100\n","23/23 [==============================] - 10s 428ms/step - loss: 0.2343 - accuracy: 0.9095 - val_loss: 0.6429 - val_accuracy: 0.7889\n","Epoch 36/100\n","23/23 [==============================] - 9s 397ms/step - loss: 0.2330 - accuracy: 0.9248 - val_loss: 0.4996 - val_accuracy: 0.8444\n","Epoch 37/100\n","23/23 [==============================] - 10s 449ms/step - loss: 0.2771 - accuracy: 0.9095 - val_loss: 0.6536 - val_accuracy: 0.7889\n","Epoch 38/100\n","23/23 [==============================] - 12s 521ms/step - loss: 0.3060 - accuracy: 0.8858 - val_loss: 0.6344 - val_accuracy: 0.8333\n","Epoch 39/100\n","23/23 [==============================] - 9s 388ms/step - loss: 0.2084 - accuracy: 0.9276 - val_loss: 0.5903 - val_accuracy: 0.8444\n","Epoch 40/100\n","23/23 [==============================] - 10s 451ms/step - loss: 0.2666 - accuracy: 0.9081 - val_loss: 0.6430 - val_accuracy: 0.8222\n","Epoch 41/100\n","23/23 [==============================] - 10s 422ms/step - loss: 0.2340 - accuracy: 0.9136 - val_loss: 0.5025 - val_accuracy: 0.8556\n","Epoch 42/100\n","23/23 [==============================] - 10s 420ms/step - loss: 0.2334 - accuracy: 0.9220 - val_loss: 0.4080 - val_accuracy: 0.8889\n","Epoch 43/100\n","23/23 [==============================] - 10s 422ms/step - loss: 0.2059 - accuracy: 0.9276 - val_loss: 0.6509 - val_accuracy: 0.8222\n","Epoch 44/100\n","23/23 [==============================] - 10s 418ms/step - loss: 0.2851 - accuracy: 0.8942 - val_loss: 0.6429 - val_accuracy: 0.8000\n","Epoch 45/100\n","23/23 [==============================] - 10s 424ms/step - loss: 0.2522 - accuracy: 0.9206 - val_loss: 0.5184 - val_accuracy: 0.8333\n","Epoch 46/100\n","23/23 [==============================] - 10s 422ms/step - loss: 0.2284 - accuracy: 0.9136 - val_loss: 0.8374 - val_accuracy: 0.7778\n","Epoch 47/100\n","23/23 [==============================] - 10s 426ms/step - loss: 0.1859 - accuracy: 0.9304 - val_loss: 0.5425 - val_accuracy: 0.8222\n","Epoch 48/100\n","23/23 [==============================] - 10s 425ms/step - loss: 0.1941 - accuracy: 0.9206 - val_loss: 0.5580 - val_accuracy: 0.8222\n","Epoch 49/100\n","23/23 [==============================] - 10s 420ms/step - loss: 0.2054 - accuracy: 0.9290 - val_loss: 0.4308 - val_accuracy: 0.8667\n","Epoch 50/100\n","23/23 [==============================] - 10s 425ms/step - loss: 0.2674 - accuracy: 0.8900 - val_loss: 0.5968 - val_accuracy: 0.8000\n","Epoch 51/100\n","23/23 [==============================] - 11s 463ms/step - loss: 0.2116 - accuracy: 0.9234 - val_loss: 0.5557 - val_accuracy: 0.8333\n","Epoch 52/100\n","23/23 [==============================] - 10s 423ms/step - loss: 0.2066 - accuracy: 0.9248 - val_loss: 0.5064 - val_accuracy: 0.8333\n","Epoch 53/100\n","23/23 [==============================] - 10s 432ms/step - loss: 0.1869 - accuracy: 0.9234 - val_loss: 0.4752 - val_accuracy: 0.8556\n","Epoch 54/100\n","23/23 [==============================] - 10s 409ms/step - loss: 0.1806 - accuracy: 0.9318 - val_loss: 0.5657 - val_accuracy: 0.8333\n","Epoch 55/100\n","23/23 [==============================] - 10s 424ms/step - loss: 0.1993 - accuracy: 0.9290 - val_loss: 0.4560 - val_accuracy: 0.8667\n","Epoch 56/100\n","23/23 [==============================] - 10s 423ms/step - loss: 0.1977 - accuracy: 0.9206 - val_loss: 0.4683 - val_accuracy: 0.8667\n","Epoch 57/100\n","23/23 [==============================] - 10s 425ms/step - loss: 0.2106 - accuracy: 0.9262 - val_loss: 0.4946 - val_accuracy: 0.8444\n","Epoch 58/100\n","23/23 [==============================] - 10s 429ms/step - loss: 0.1980 - accuracy: 0.9290 - val_loss: 0.6118 - val_accuracy: 0.7889\n","Epoch 59/100\n","23/23 [==============================] - 10s 412ms/step - loss: 0.2852 - accuracy: 0.9011 - val_loss: 0.5566 - val_accuracy: 0.7889\n","Epoch 60/100\n","23/23 [==============================] - 10s 427ms/step - loss: 0.2631 - accuracy: 0.9039 - val_loss: 0.3949 - val_accuracy: 0.8667\n","Epoch 61/100\n","23/23 [==============================] - 10s 426ms/step - loss: 0.2189 - accuracy: 0.9178 - val_loss: 0.5928 - val_accuracy: 0.7889\n","Epoch 62/100\n","23/23 [==============================] - 10s 426ms/step - loss: 0.1796 - accuracy: 0.9331 - val_loss: 0.4848 - val_accuracy: 0.8444\n","Epoch 63/100\n","23/23 [==============================] - 10s 431ms/step - loss: 0.2282 - accuracy: 0.9081 - val_loss: 0.5425 - val_accuracy: 0.8222\n","Epoch 64/100\n","23/23 [==============================] - 10s 412ms/step - loss: 0.1802 - accuracy: 0.9262 - val_loss: 0.6368 - val_accuracy: 0.7889\n","Epoch 65/100\n","23/23 [==============================] - 10s 425ms/step - loss: 0.2224 - accuracy: 0.9178 - val_loss: 0.9482 - val_accuracy: 0.7111\n","Epoch 66/100\n","23/23 [==============================] - 16s 713ms/step - loss: 0.2953 - accuracy: 0.8872 - val_loss: 0.5591 - val_accuracy: 0.8333\n","Epoch 67/100\n","23/23 [==============================] - 10s 430ms/step - loss: 0.1945 - accuracy: 0.9345 - val_loss: 0.4694 - val_accuracy: 0.8667\n","Epoch 68/100\n","23/23 [==============================] - 11s 464ms/step - loss: 0.1706 - accuracy: 0.9359 - val_loss: 0.4809 - val_accuracy: 0.8111\n","Epoch 69/100\n","23/23 [==============================] - 10s 423ms/step - loss: 0.1702 - accuracy: 0.9359 - val_loss: 0.5650 - val_accuracy: 0.8111\n","Epoch 70/100\n","23/23 [==============================] - 9s 392ms/step - loss: 0.2944 - accuracy: 0.8830 - val_loss: 0.6053 - val_accuracy: 0.7667\n","Epoch 71/100\n","23/23 [==============================] - 10s 444ms/step - loss: 0.1907 - accuracy: 0.9276 - val_loss: 0.4992 - val_accuracy: 0.8444\n","Epoch 72/100\n","23/23 [==============================] - 10s 421ms/step - loss: 0.2043 - accuracy: 0.9164 - val_loss: 0.5179 - val_accuracy: 0.8111\n","Epoch 73/100\n","23/23 [==============================] - 10s 457ms/step - loss: 0.1961 - accuracy: 0.9318 - val_loss: 0.5542 - val_accuracy: 0.8556\n","Epoch 74/100\n","23/23 [==============================] - 10s 420ms/step - loss: 0.2126 - accuracy: 0.9262 - val_loss: 0.8487 - val_accuracy: 0.7667\n","Epoch 75/100\n","23/23 [==============================] - 9s 397ms/step - loss: 0.3153 - accuracy: 0.8928 - val_loss: 0.5812 - val_accuracy: 0.8556\n","Epoch 76/100\n","23/23 [==============================] - 9s 404ms/step - loss: 0.1976 - accuracy: 0.9373 - val_loss: 0.5298 - val_accuracy: 0.8444\n","Epoch 77/100\n","23/23 [==============================] - 10s 424ms/step - loss: 0.2006 - accuracy: 0.9304 - val_loss: 0.6251 - val_accuracy: 0.8444\n","Epoch 78/100\n","23/23 [==============================] - 11s 462ms/step - loss: 0.2010 - accuracy: 0.9234 - val_loss: 0.5406 - val_accuracy: 0.8333\n","Epoch 79/100\n","23/23 [==============================] - 10s 424ms/step - loss: 0.1818 - accuracy: 0.9318 - val_loss: 0.7232 - val_accuracy: 0.8222\n","Epoch 80/100\n","23/23 [==============================] - 9s 389ms/step - loss: 0.2061 - accuracy: 0.9178 - val_loss: 0.4872 - val_accuracy: 0.8778\n","Epoch 81/100\n","23/23 [==============================] - 10s 421ms/step - loss: 0.1687 - accuracy: 0.9485 - val_loss: 0.5205 - val_accuracy: 0.8556\n","Epoch 82/100\n","23/23 [==============================] - 10s 428ms/step - loss: 0.1738 - accuracy: 0.9331 - val_loss: 0.7867 - val_accuracy: 0.7556\n","Epoch 83/100\n","23/23 [==============================] - 11s 461ms/step - loss: 0.2600 - accuracy: 0.9025 - val_loss: 0.5362 - val_accuracy: 0.8444\n","Epoch 84/100\n","23/23 [==============================] - 10s 429ms/step - loss: 0.2417 - accuracy: 0.9081 - val_loss: 0.6466 - val_accuracy: 0.7667\n","Epoch 85/100\n","23/23 [==============================] - 9s 391ms/step - loss: 0.1971 - accuracy: 0.9123 - val_loss: 0.5124 - val_accuracy: 0.8667\n","Epoch 86/100\n","23/23 [==============================] - 10s 422ms/step - loss: 0.1402 - accuracy: 0.9443 - val_loss: 0.9042 - val_accuracy: 0.8111\n","Epoch 87/100\n","23/23 [==============================] - 10s 426ms/step - loss: 0.1826 - accuracy: 0.9359 - val_loss: 0.6430 - val_accuracy: 0.8444\n","Epoch 88/100\n","23/23 [==============================] - 10s 431ms/step - loss: 0.2243 - accuracy: 0.9150 - val_loss: 0.6735 - val_accuracy: 0.7778\n","Epoch 89/100\n","23/23 [==============================] - 10s 444ms/step - loss: 0.1951 - accuracy: 0.9234 - val_loss: 0.5534 - val_accuracy: 0.8333\n","Epoch 90/100\n","23/23 [==============================] - 9s 393ms/step - loss: 0.1654 - accuracy: 0.9345 - val_loss: 0.5587 - val_accuracy: 0.8444\n","Epoch 91/100\n","23/23 [==============================] - 10s 415ms/step - loss: 0.1810 - accuracy: 0.9276 - val_loss: 0.4358 - val_accuracy: 0.8778\n","Epoch 92/100\n","23/23 [==============================] - 10s 454ms/step - loss: 0.1308 - accuracy: 0.9429 - val_loss: 0.4622 - val_accuracy: 0.8889\n","Epoch 93/100\n","23/23 [==============================] - 10s 426ms/step - loss: 0.1405 - accuracy: 0.9443 - val_loss: 0.4755 - val_accuracy: 0.8889\n","Epoch 94/100\n","23/23 [==============================] - 11s 464ms/step - loss: 0.1372 - accuracy: 0.9513 - val_loss: 0.5791 - val_accuracy: 0.8222\n","Epoch 95/100\n","23/23 [==============================] - 10s 418ms/step - loss: 0.1818 - accuracy: 0.9318 - val_loss: 0.5548 - val_accuracy: 0.8667\n","Epoch 96/100\n","23/23 [==============================] - 9s 391ms/step - loss: 0.2068 - accuracy: 0.9234 - val_loss: 0.7907 - val_accuracy: 0.7889\n","Epoch 97/100\n","23/23 [==============================] - 10s 428ms/step - loss: 0.1846 - accuracy: 0.9401 - val_loss: 0.6061 - val_accuracy: 0.8667\n","Epoch 98/100\n","23/23 [==============================] - 10s 426ms/step - loss: 0.2062 - accuracy: 0.9234 - val_loss: 0.5839 - val_accuracy: 0.8444\n","Epoch 99/100\n","23/23 [==============================] - 11s 466ms/step - loss: 0.1964 - accuracy: 0.9290 - val_loss: 0.5328 - val_accuracy: 0.8111\n","Epoch 100/100\n","23/23 [==============================] - 10s 423ms/step - loss: 0.1690 - accuracy: 0.9415 - val_loss: 0.5175 - val_accuracy: 0.8667\n"]}]},{"cell_type":"code","source":["plt.plot(results.history['loss'], label=\"Train\")\n","plt.plot(results.history['val_loss'], label=\"Test\")\n","plt.ylabel(\"Loss\")\n","plt.xlabel(\"Epoch\")\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"YERJ8WbYk_Ul","executionInfo":{"status":"ok","timestamp":1676003250637,"user_tz":-330,"elapsed":537,"user":{"displayName":"Shaista Daniya","userId":"12707569234039829089"}},"outputId":"8cf173d5-5743-4167-d1bb-3df9c60d2963"},"execution_count":20,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]}]}